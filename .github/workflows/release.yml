name: Android CI 🚀

on:
  push:
    tags:
      - '*prerelease_v*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout⤵️
      uses: actions/checkout@v4.1.0
    - name: Setup Java JDK
      uses: actions/setup-java@v4.2.1
      with:
        distribution: 'adopt'
        java-version: '17'
    - name: further configuration
      env:
        DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
      run: echo $DATA > ./app/google-services.json
      
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - name: Build with Gradle
      run: ./gradlew build
    - name: find artifact
      run: find . -type f -name '*apk*'
    - name: Post Run Cleanup
      run: rm -f ./app/google-services.json
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          Release
        draft: false
        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./app/build/outputs/apk/release/app-release-unsigned.apk
        asset_name: ${{ format('ProductSurvey_{0}.apk',github.ref_name)}}
        asset_content_type: application/apk
  
